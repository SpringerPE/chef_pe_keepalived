! Configuration File for keepalived
! Generated by Chef for <%= node[:fqdn] %>

global_defs {
  <% if node[:pe_keepalived]['global']['notification_emails'] -%>
  notification_email {
    <% Array(node[:pe_keepalived]['global']['notification_emails']).each do |email| %>
    <%= email %>
    <% end %>
  }
  notification_email_from <%= node[:pe_keepalived]['global']['email_from'] %>
  smtp_server <%= node[:pe_keepalived]['global']['smtp_server'] %>
  smtp_connect_timeout <%= node[:pe_keepalived]['global']['smtp_connect_timeout'] || 30 %>
  <% end -%>
  lvs_id <%= @lvs_id %>
}

static_ipaddress {
<% Array(node[:pe_keepalived]['static_ipaddress']).each do |ip| %>
  <%= ip %>
<% end %>
}

static_routes {
<% Array(node[:pe_keepalived]['static_routes']).each do |route| %>
  <%= route %>
<% end %>
}

<% unless node[:pe_keepalived]['sync_groups'].nil? -%>
  <% node[:pe_keepalived]['sync_groups'].each do |group, values| -%>
vrrp_sync_group <%= group.upcase %> {
  group {
    <% values['instances'].each_pair do |name, instance| -%>
    <%= name.upcase %>
    <% end -%>
  }
  <% if values['notify_master'] -%>
  notify_master "<%= values['notify_master'] %>"
  <% end -%>
  <% if values['notify_backup'] -%>
  notify_backup "<%= values['notify_backup'] %>"
  <% end -%>
  <% if values['notify_fault'] -%>
  notify_fault "<%= values['notify_fault'] %>"
  <% end -%>
}

  <% values['instances'].each_pair do |name, instance| -%>
  <%
  virtualservers = instance['virtualserver'] || {}
  scripts = instance['scripts'] || {}
  -%>
  <% scripts.each_pair do |scriptname, script| %>
  vrrp_script <%= scriptname %> {
    <% script.each_pair do |scriptkey, scriptvalue| %>
    <%= scriptkey %> <%= scriptvalue %>
    <% end %>
  }
  <% end %>

  vrrp_instance <%= name.upcase %> {
    virtual_router_id <%= instance['virtual_router_id'] %>
    state <%= instance['state'] %>
    priority <%= instance['priority'] %>
    interface <%= instance['interface'] %>
    <% if instance['mcast_src_ip'] -%>
    mcast_src_ip <%= instance['mcast_src_ip'] %>
    <% end -%>
    <% if instance['lvs_sync_daemon_interface'] -%>
    lvs_sync_daemon_interface <%= instance['lvs_sync_daemon_interface'] %>
    <% end -%>
    <% if instance['smtp_alert'] -%>
    smtp_alert
    <% end -%>
    <% if instance['notify_master'] -%>
    notify_master "<%= instance['notify_master'] %>"
    <% end -%>
    <% if instance['notify_backup'] -%>
    notify_backup "<%= instance['notify_backup'] %>"
    <% end -%>
    <% if instance['notify_fault'] -%>
    notify_fault "<%= instance['notify_fault'] %>"
    <% end -%>
    <% if instance['nopreempt'] -%>
    nopreempt
    <% end -%>
    <% if instance['advert_int'] -%>
    advert_int <%= instance['advert_int'] %>
    <% end -%>
    <% if instance['unicast_peer'] && !instance['unicast_peer'].empty? -%>
    unicast_peer {
      <% Array(instance['unicast_peer']).each do |address| %>
      <%= address %>
      <% end %>
    }
    <% end -%>
    authentication {
       auth_type <%= instance['auth_type'] %>
       auth_pass <%= instance['auth_pass'] %>
    }
    virtual_ipaddress {
       <% Array(instance['virtual_ipaddress']).each do |address| %>
       <%= address %>
       <% end %>
    }
    <% if scripts %>
    track_script {
       <% scripts.each do |scriptname, scriptval| %>
       <%= scriptname %>
       <% end %>
    }
    <% end %>
  }

  <% virtualservers.each do |vname, virtualserver| %>
  <%
  next if virtualserver[:servers].empty?
  virtname = vname.split(':')[0]
  port = vname.split(':')[1]
  servers = virtualserver[:servers]
  -%>
  virtual_server  <%= virtname %> <%= port %> {
     delay_loop <%= virtualserver[:delay_loop] || '30' %>
     lb_algo <%= virtualserver[:lb_algo] || 'rr' %>
     lb_kind <%= virtualserver[:lb_kind] || 'NAT' %>
     persistence_timeout <%= virtualserver[:persistence_timeout] || '9600' %>
     protocol <%= virtualserver[:protocol] || 'TCP' %>
     <% if virtualserver['persistence_granularity'] -%>
     persistence_granularity <%= instance['persistence_granularity'] %>
     <% end -%>
     <% if virtualserver['virtualhost'] -%>
     virtualhost <%= instance['virtualhost'] %>
     <% end -%>
     <% if virtualserver['sorry_server'] -%>
     sorry_server <%= instance['sorry_server'] %>
     <% end -%>
     <% servers.each_pair do |server, parameters| %>
     <%
     sname = server.split(':')[0]
     sport = server.split(':')[1]
     -%>
     real_server <%= sname %> <%= sport %> {
	weight <%= parameters[:weight] || 10 %>
        <% ['HTTP_GET', 'SSL_GET', 'TCP_CHECK', 'SMTP_CHECK', 'MISC_CHECK'].each do |method| -%>
            <% if parameters[method] -%>
               <%= method %> {
                   <% parameters[method].each do |kind, kindpar| %>
                       <% if kind == 'url' || kind == 'host' %>
                           <%= kind %> {
                           <% kindpar.each do |kindpath, kindvalue| %>
                               <%= kindpath %> <%= kindvalue %>
                           <% end %>
                           }
                       <% else %>
                           <%= kind %> <%= kindpar %>
                       <% end -%>
                   <% end -%>
               }
            <% end -%> 
        <% end -%>
     }
     <% end -%>
  }
  <% end %>

  <% end -%>
  <% end -%>
<% end -%>

